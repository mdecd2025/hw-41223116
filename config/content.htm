<h1>About</h1>
<p>課程名稱：協同產品設計實習 - Collaborative Product Design Practice</p>
<h1>w1</h1>
<p>學員作業網站: <a class="Link--inTextBlock" href="https://mdecd2025.github.io/hw-41223116/">https://mdecd2025.github.io/hw-41223116/</a></p>
<p>學員作業倉儲: <a href="https://github.com/mdecd2025/hw-41223116">https://github.com/mdecd2025/hw-41223116</a></p>
<p>團隊(2)作業網站:<a class="Link--inTextBlock" href="https://mdecd2025.github.io/2a-ag2/">https://mdecd2025.github.io/2a-ag2/</a></p>
<p>團隊(2)作業倉儲:<a href="https://github.com/orgs/mdecd2025/teams/ag2/members">https://github.com/orgs/mdecd2025/teams/ag2/members</a></p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<p style="padding-left: 30px;"></p>
<h1>w16</h1>
<p>webots檔案<a href="/downloads/w16..7z">/downloads/w16..7z</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/trfqv_3i0Iw?si=3g4JL8bETROBuEQ4" title="YouTube video player" width="560"></iframe></p>
<h1>task5</h1>
<ol>
<li><br/>請整理<span> </span><a href="https://cyberbotics.com/doc/guide/introduction-to-webots">https://cyberbotics.com/doc/guide/introduction-to-webots</a><span> </span>中重要的英文單字與用法, 並且針對其中所使用的英文文法逐句說明.
<h3>Important Vocabulary and Phrases (重要詞彙與短語)</h3>
<ol data-end="1102" data-start="48">
<li data-end="88" data-start="48"><strong data-end="65" data-start="51">Simulation</strong><span> </span>- 模擬：一個模仿現實世界過程或系統的過程。</li>
<li data-end="135" data-start="89"><strong data-end="107" data-start="92">Prototyping</strong><span> </span>- 原型製作：創建產品或系統的早期版本（原型）的過程。</li>
<li data-end="190" data-start="136"><strong data-end="155" data-start="139">Mobile Robot</strong><span> </span>- 移動機器人：能夠在其環境中移動的機器人，通常配有感測器和驅動器。</li>
<li data-end="259" data-start="191"><strong data-end="216" data-start="194">Locomotion Schemes</strong><span> </span>- 移動方式：機器人移動的方式或系統（例如，輪式機器人、步態機器人、飛行機器人等）。</li>
<li data-end="310" data-start="260"><strong data-end="274" data-start="263">Sensors</strong><span> </span>- 感測器：用來檢測並對物理刺激作出反應的裝置，例如相機或距離感測器。</li>
<li data-end="349" data-start="311"><strong data-end="327" data-start="314">Actuators</strong><span> </span>- 驅動器：執行動作的裝置，如馬達或車輪。</li>
<li data-end="397" data-start="350"><strong data-end="375" data-start="353">Controller Program</strong><span> </span>- 控制程式：控制機器人行為或運作的程式。</li>
<li data-end="452" data-start="398"><strong data-end="414" data-start="401">Interface</strong><span> </span>- 介面：系統之間的連接或溝通（在此指模擬機器人與實體機器人之間的介面）。</li>
<li data-end="515" data-start="453"><strong data-end="480" data-start="456">Multi-Agent Research</strong><span> </span>- 多代理研究：涉及多個機器人共同工作的研究，通常是協作或集群設定。</li>
<li data-end="581" data-start="516"><strong data-end="541" data-start="520">Adaptive Behavior</strong><span> </span>- 自適應行為：基於環境或經驗變化的行為（通常涉及如神經網絡等人工智慧方法）。</li>
<li data-end="643" data-start="582"><strong data-end="599" data-start="586">BotStudio</strong><span> </span>- BotStudio：一種簡單的圖形化程式設計語言，用於在Webots中編程機器人。</li>
<li data-end="727" data-start="644"><strong data-end="694" data-start="648">VRML97 (Virtual Reality Modeling Language)</strong><span> </span>- VRML97（虛擬現實建模語言）：描述3D物體和環境的標準。</li>
<li data-end="779" data-start="728"><strong data-end="751" data-start="732">PROTOTYPE Files</strong><span> </span>- PROTOTYPE檔案：定義模擬中新增物件的檔案。</li>
<li data-end="824" data-start="780"><strong data-end="798" data-start="784">World File</strong><span> </span>- 世界檔案：定義模擬中環境、物體和機器人的檔案。</li>
<li data-end="883" data-start="825"><strong data-end="853" data-start="829">Controller Directory</strong><span> </span>- 控制器目錄：儲存機器人控制程式源碼和二進位檔案的目錄。</li>
<li data-end="947" data-start="884"><strong data-end="913" data-start="888">Supervisor Controller</strong><span> </span>- 監督控制器：一種特殊的控制器，具有更高的許可權來管理模擬功能。</li>
<li data-end="1013" data-start="948"><strong data-end="974" data-start="952">Binary Executables</strong><span> </span>- 二進位執行檔：已編譯並可在系統中運行的程式檔案（例如".exe"檔案）。</li>
<li data-end="1102" data-start="1014"><strong data-end="1052" data-start="1018">Interpretation vs. Compilation</strong><span> </span>- 解釋與編譯：指編程語言的處理方式（例如，編譯語言如C/C++與解釋語言如Python的區別）。                                       </li>
</ol>
</li>
</ol>
<h2>請列出上述文章中的重要的英文單字與解釋, 以及出現在文句中的用法</h2>
<ol>
<li data-end="1139" data-start="1109">Grammar Explanation (文法說明)</li>
<li data-end="1157" data-start="1141">Sentence 1:</li>
<li data-end="1226" data-start="1158">"Webots is a professional mobile robot simulation software package."</li>
</ol>
<ul data-end="1353" data-start="1227">
<li data-end="1353" data-start="1227"><strong data-end="1241" data-start="1229">"Webots"</strong><span> </span>(主語)<span> </span><strong data-end="1253" data-start="1247">is</strong><span> </span>(連繫動詞)<span> </span><strong data-end="1320" data-start="1261">a professional mobile robot simulation software package</strong><span> </span>(謂語名詞短語)。這是一個簡單的陳述句，描述Webots是什麼。</li>
</ul>
<ol>
<li data-end="1371" data-start="1355">Sentence 2:</li>
<li data-end="1539" data-start="1372">"It offers a rapid prototyping environment, that allows the user to create 3D virtual worlds with physics properties such as mass, joints, friction coefficients, etc."</li>
</ol>
<ul data-end="1783" data-start="1540">
<li data-end="1581" data-start="1540"><strong data-end="1557" data-start="1542">"It offers"</strong><span> </span>(主語 + 動詞) 介紹了Webots的功能。</li>
<li data-end="1635" data-start="1582"><strong data-end="1601" data-start="1584">"that allows"</strong><span> </span>是一個關係子句，修飾 "environment"，解釋環境的功能。</li>
<li data-end="1681" data-start="1636"><strong data-end="1662" data-start="1638">"the user to create"</strong>（不定式短語）說明用戶可以進行的操作。</li>
<li data-end="1783" data-start="1682"><strong data-end="1763" data-start="1684">"with physics properties such as mass, joints, friction coefficients, etc."</strong><span> </span>提供有關虛擬世界的物理屬性的詳細信息。</li>
</ul>
<ol>
<li data-end="1801" data-start="1785">Sentence 3:</li>
<li data-end="1883" data-start="1802">"The user can add simple passive objects or active objects called mobile robots."</li>
</ol>
<ul data-end="2008" data-start="1884">
<li data-end="1941" data-start="1884"><strong data-end="1908" data-start="1886">"The user can add"</strong>（主語 + 情態動詞 + 動詞原形）表示用戶可以進行的操作或許可。</li>
<li data-end="2008" data-start="1942"><strong data-end="1970" data-start="1944">"called mobile robots"</strong><span> </span>是一個現在分詞短語，修飾 "active objects"，提供額外信息。</li>
</ul>
<ol>
<li data-end="2026" data-start="2010">Sentence 4:</li>
<li data-end="2130" data-start="2027">"These robots can have different locomotion schemes (wheeled robots, legged robots, or flying robots)."</li>
</ol>
<ul data-end="2207" data-start="2131">
<li data-end="2152" data-start="2131"><strong data-end="2142" data-start="2133">"can"</strong><span> </span>表示能力或可能性。</li>
<li data-end="2207" data-start="2153"><strong data-end="2189" data-start="2155">"different locomotion schemes"</strong><span> </span>表示機器人可以採用的不同移動方式。</li>
</ul>
<ol>
<li data-end="2225" data-start="2209">Sentence 5:</li>
<li data-end="2402" data-start="2226">"Moreover, they may be equipped with a number of sensor and actuator devices, such as distance sensors, drive wheels, cameras, motors, touch sensors, emitters, receivers, etc."</li>
</ol>
<ul data-end="2482" data-start="2403">
<li data-end="2448" data-start="2403"><strong data-end="2426" data-start="2405">"may be equipped"</strong><span> </span>使用情態動詞<span> </span><strong data-end="2441" data-start="2434">may</strong><span> </span>表示可能性。</li>
<li data-end="2482" data-start="2449"><strong data-end="2464" data-start="2451">"such as"</strong><span> </span>用來介紹感測器和驅動器裝置的例子。</li>
</ul>
<ol>
<li data-end="2500" data-start="2484">Sentence 6:</li>
<li data-end="2589" data-start="2501">"Finally, the user can program each robot individually to exhibit the desired behavior."</li>
</ol>
<ul data-end="2676" data-start="2590">
<li data-end="2631" data-start="2590"><strong data-end="2618" data-start="2592">"The user can program"</strong><span> </span>顯示了用戶的能力或許可。</li>
<li data-end="2676" data-start="2632"><strong data-end="2650" data-start="2634">"to exhibit"</strong><span> </span>是不定式動詞，說明編程的目的是為了表現所需的行為。</li>
</ul>
<ol>
<li data-end="2694" data-start="2678">Sentence 7:</li>
<li data-end="2905" data-start="2695">"Webots also contains a number of interfaces to real mobile robots, so that once your simulated robot behaves as expected, you can transfer its control program to a real robot like e-puck, DARwIn-OP, Nao, etc."</li>
</ol>
<ul data-end="3012" data-start="2906">
<li data-end="2941" data-start="2906"><strong data-end="2921" data-start="2908">"so that"</strong><span> </span>引導目的子句，解釋為何要轉移控制程式。</li>
<li data-end="3012" data-start="2942"><strong data-end="2983" data-start="2944">"once your simulated robot behaves"</strong><span> </span>是時間條件子句，表示模擬機器人表現正常後，才會進行轉移。</li>
</ul>
<ol>
<li data-end="3030" data-start="3014">Sentence 8:</li>
<li data-end="3059" data-start="3031">"What can I do with Webots?"</li>
</ol>
<ul data-end="3101" data-start="3060">
<li data-end="3101" data-start="3060">這是一個簡單的疑問句，使用情態動詞<span> </span><strong data-end="3089" data-start="3080">"can"</strong><span> </span>問Webots的功能。</li>
</ul>
<ol>
<li data-end="3119" data-start="3103">Sentence 9:</li>
<li data-end="3209" data-start="3120">"Webots is well suited for research and educational projects related to mobile robotics."</li>
</ol>
<ul data-end="3307" data-start="3210">
<li data-end="3253" data-start="3210"><strong data-end="3236" data-start="3212">"is well suited for"</strong><span> </span>表示Webots適合於某些用途。</li>
<li data-end="3307" data-start="3254"><strong data-end="3288" data-start="3256">"related to mobile robotics"</strong><span> </span>描述了Webots所支持的研究領域。</li>
</ul>
<ol>
<li data-end="3326" data-start="3309">Sentence 10:</li>
<li data-end="3414" data-start="3327">"Many mobile robotics projects have relied on Webots for years in the following areas:"</li>
</ol>
<ul data-end="3480" data-start="3415">
<li data-end="3458" data-start="3415"><strong data-end="3434" data-start="3417">"have relied"</strong><span> </span>使用現在完成時，表示一個持續或反覆發生的動作。</li>
<li data-end="3480" data-start="3459">這句話列出了Webots被使用的領域。</li>
</ul>
<ol>
<li data-end="3499" data-start="3482">Sentence 11:</li>
<li data-end="3539" data-start="3500">"What do I need to know to use Webots?"</li>
</ol>
<ul data-end="3589" data-start="3540">
<li data-end="3589" data-start="3540">這是另一個疑問句，使用<span> </span><strong data-end="3577" data-start="3554">"do I need to know"</strong><span> </span>來詢問需要掌握的知識。</li>
</ul>
<ol>
<li data-end="3608" data-start="3591">Sentence 12:</li>
<li data-end="3697" data-start="3609">"You will need a minimal amount of technical knowledge to develop your own simulations."</li>
</ol>
<ul data-end="3794" data-start="3698">
<li data-end="3737" data-start="3698"><strong data-end="3719" data-start="3700">"You will need"</strong>（將來時）表示必須具備的條件或需求。</li>
<li data-end="3794" data-start="3738"><strong data-end="3785" data-start="3740">"a minimal amount of technical knowledge"</strong><span> </span>指出所需的知識。</li>
</ul>
<ol>
<li data-end="3813" data-start="3796">Sentence 13:</li>
<li data-end="4076" data-start="3814">"If you don't want to use existing robot models provided within Webots and would like to create your own robot models, or add special objects in the simulated environments, you will need a basic knowledge of 3D computer graphics and VRML97 description language."</li>
</ol>
<ul data-end="4208" data-start="4077">
<li data-end="4126" data-start="4077"><strong data-end="4102" data-start="4079">"If you don't want"</strong>（條件句）提出一種情境，表示若不使用現有的模型。</li>
<li data-end="4167" data-start="4127"><strong data-end="4155" data-start="4129">"would like to create"</strong><span> </span>表示替代的期望或行動。</li>
<li data-end="4208" data-start="4168"><strong data-end="4189" data-start="4170">"you will need"</strong>（將來時）強調執行某些操作所需的知識。</li>
</ul>
<ol>
<li data-end="4227" data-start="4210">Sentence 14:</li>
<li data-end="4256" data-start="4228">"How do I get User Support?"</li>
</ol>
<ul data-end="4280" data-start="4257">
<li data-end="4280" data-start="4257">這是簡單的疑問句，詢問如何獲得使用者支持。</li>
</ul>
<hr data-end="4285" data-start="4282"/>
<ol>
<li data-end="4324" data-start="4287">Overall Grammar Features (整體文法特點)</li>
</ol>
<ul data-end="4684" data-is-last-node="" data-is-only-node="" data-start="4325">
<li data-end="4393" data-start="4325"><strong data-end="4359" data-start="4327">Present Simple Tense (現在簡單時)</strong>: 用來描述事實或一般性資訊（例如："Webots is..."）。</li>
<li data-end="4474" data-start="4394"><strong data-end="4435" data-start="4396">Modal Verbs (情態動詞)（can, may, would）</strong>: 表示可能性、能力或請求（例如："You can program..."）。</li>
<li data-end="4550" data-start="4475"><strong data-end="4504" data-start="4477">Relative Clauses (關係子句)</strong>: 提供名詞的額外資訊（例如："robots called mobile robots"）。</li>
<li data-end="4611" data-start="4551"><strong data-end="4575" data-start="4553">Future Tense (將來時)</strong>: 描述將來會發生的動作（例如："You will need..."）。</li>
<li data-end="4684" data-is-last-node="" data-start="4612"><strong data-end="4643" data-start="4614">Conditional Clauses (條件句)</strong>: 描述假設的情況及其結果（例如："If you don't want..."）</li>
</ul>
<h1>Homework</h1>
<p>作業 (30%)</p>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">part1:</p>
<p style="padding-left: 60px;">請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置:</p>
<p style="padding-left: 90px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p style="padding-left: 30px;">part2:</p>
<p style="padding-left: 60px;">請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 60px;">base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec.</p>
<p style="padding-left: 30px;">part3:</p>
<p style="padding-left: 60px;">模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2025_hw1_demo.7z">cd2025_hw1_demo.7z</a></p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p style="padding-left: 30px;">請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 (<a href="https://www.youtube.com/watch?v=LloG_Jn_TI0&amp;t=51s">參考影片</a>)後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="/downloads/fourbar_ball_throwing_linkage.slvs">fourbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sixbar_ball_throwing_linkage.slvs">sixbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/fourbar_ball_throwing_linkage.gif" width="400"/></p>
<p>HW 1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題：國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號</p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號</p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號</p>
<br/><br/>HW1<span>相關提問:</span>
<h3>Webots 是什麼樣的軟體？它主要用途為何？</h3>
<p data-end="158" data-start="75">Webots 是一套由 <strong data-end="105" data-start="90">Cyberbotics</strong> 所開發的 <strong data-end="128" data-start="111">開源 3D 機器人模擬軟體</strong>，用於模擬機器人在真實世界中行為的虛擬環境。其主要用途包括：</p>
<ul data-end="262" data-start="160">
<li data-end="178" data-start="160">
<p data-end="178" data-start="162">設計與模擬移動式或靜態機器人系統</p>
</li>
<li data-end="211" data-start="179">
<p data-end="211" data-start="181">測試機器人控制演算法（例如感測器融合、路徑規劃、強化學習等）</p>
</li>
<li data-end="236" data-start="212">
<p data-end="236" data-start="214">教學與研究（機器人學、人工智慧、自主導航等）</p>
</li>
<li data-end="262" data-start="237">
<p data-end="262" data-start="239">開發與驗證機器人軟硬體設計（可搭配真實機器人）</p>
</li>
</ul>
<h3>如何在 Webots 中建立並執行一個新的模擬世界（world）？</h3>
<p></p>
<ul>
<li data-end="339" data-start="322">
<p data-end="339" data-start="325"><strong data-end="338" data-start="325">啟動 Webots</strong>。</p>
</li>
<li data-end="379" data-start="340">
<p data-end="379" data-start="343">選單中點選 <code data-end="355" data-start="349">File</code> → <code data-end="369" data-start="358">New World</code> 建立新的模擬場景。</p>
</li>
<li data-end="477" data-start="380">
<p data-end="420" data-start="383">可透過左側「場景樹」(Scene Tree) 加入環境物件與機器人，例如：</p>
<ul data-end="477" data-start="424">
<li data-end="452" data-start="424">
<p data-end="452" data-start="426">加入地面：<code data-end="452" data-start="431">Add &gt; Solid &gt; Floor</code></p>
</li>
<li data-end="477" data-start="456">
<p data-end="477" data-start="458">加入機器人：<code data-end="477" data-start="464">Add &gt; Robot</code></p>
</li>
</ul>
</li>
<li data-end="499" data-start="478">
<p data-end="499" data-start="481">編輯物件屬性，如大小、材質、位置等。</p>
</li>
<li data-end="523" data-start="500">
<p data-end="523" data-start="503">儲存世界檔案（副檔名為 <code data-end="521" data-start="515">.wbt</code>）。</p>
</li>
<li data-end="553" data-start="524">
<p data-end="553" data-start="527">點選「播放」按鈕（上方工具列 ▶️），即可執行模擬。</p>
</li>
</ul>
<p></p>
<h3>請簡述 Webots 控制器（controller）的功能及其與機器人的關係。</h3>
<p></p>
<ul>
<li data-end="662" data-start="607">
<p data-end="662" data-start="609"><strong data-end="616" data-start="609">控制器</strong>是 Webots 中操控機器人行為的程式碼（通常是 C、Python、C++ 等語言撰寫）。</p>
</li>
<li data-end="702" data-start="663">
<p data-end="702" data-start="665">它直接與機器人的感測器與致動器互動（例如讀取紅外線感測器、控制馬達轉速）。</p>
</li>
<li data-end="763" data-start="703">
<p data-end="763" data-start="705">每個控制器程式通常對應一個機器人，可在 <code data-end="732" data-start="725">robot</code> 物件的 <code data-end="749" data-start="737">controller</code> 欄位指定對應的控制器名稱。</p>
</li>
<li data-end="825" data-start="764">
<p data-end="825" data-start="766">控制器執行週期性迴圈（如 <code data-end="814" data-start="779">while robot.step(timestep) != -1:</code>）來模擬真實時間控制。</p>
</li>
</ul>
<p></p>
<h3>Webots 中的 "Supervisor" 是什麼？它與一般機器人控制器有何不同？</h3>
<p></p>
<ul>
<li data-end="931" data-start="887">
<p data-end="931" data-start="889"><strong data-end="903" data-start="889">Supervisor</strong> 是一種特殊的控制器，擁有 <strong data-end="930" data-start="917">更高層次的控制權限</strong>。</p>
</li>
<li data-end="1036" data-start="932">
<p data-end="955" data-start="934">除了能像一般控制器一樣控制機器人，它還能：</p>
<ul data-end="1036" data-start="958">
<li data-end="978" data-start="958">
<p data-end="978" data-start="960">修改場景中的物件（新增、刪除、移動）</p>
</li>
<li data-end="995" data-start="981">
<p data-end="995" data-start="983">取得所有物件的位置與狀態</p>
</li>
<li data-end="1018" data-start="998">
<p data-end="1018" data-start="1000">重設模擬、儲存世界狀態、載入新的世界</p>
</li>
<li data-end="1036" data-start="1021">
<p data-end="1036" data-start="1023">用於強化學習（如重置環境）</p>
</li>
</ul>
</li>
<li data-end="1073" data-start="1037">
<p data-end="1073" data-start="1039">適用於：<strong data-end="1073" data-start="1043">全局管理、多機器人系統、評分系統、自動測試場景等應用</strong></p>
</li>
</ul>
<p></p>
<h3>如何將 Webots 世界（world）或機器人設定檔分享給他人，確保對方可順利開啟模擬</h3>
<ul data-end="1274" data-start="1157">
<li data-end="1274" data-start="1255">
<p data-end="1274" data-start="1257">其他依賴檔案（貼圖、模型、資料檔）</p>
<ul data-end="1274" data-start="1157">
<li data-end="1182" data-start="1157">
<p data-end="1182" data-start="1159"><code data-end="1168" data-start="1159">worlds/</code>：模擬場景檔（<code data-end="1181" data-start="1175">.wbt</code>）</p>
</li>
<li data-end="1217" data-start="1183">
<p data-end="1217" data-start="1185"><code data-end="1194" data-start="1185">protos/</code>：自訂機器人或物件的描述檔（<code data-end="1216" data-start="1208">.proto</code>）</p>
</li>
<li data-end="1254" data-start="1218">
<p data-end="1254" data-start="1220"><code data-end="1234" data-start="1220">controllers/</code>：控制器程式碼（每個控制器一個子資料夾）</p>
</li>
<li data-end="1274" data-start="1255">
<p data-end="1274" data-start="1257">其他依賴檔案（貼圖、模型、資料檔）</p>
</li>
</ul>
<p data-end="1281" data-start="1276">打包方式：</p>
<ol data-end="1385" data-start="1282">
<li data-end="1317" data-start="1282">
<p data-end="1317" data-start="1285">使用<span> </span><code data-end="1294" data-start="1288">.zip</code><span> </span>或<span> </span><code data-end="1306" data-start="1297">.tar.gz</code><span> </span>壓縮整個專案資料夾。</p>
</li>
<li data-end="1347" data-start="1318">
<p data-end="1347" data-start="1321">確保分享者與接收者都安裝有相同版本的 Webots。</p>
</li>
<li data-end="1385" data-start="1348">
<p data-end="1385" data-start="1351">接收者只需解壓縮後，透過 Webots 開啟<span> </span><code data-end="1380" data-start="1374">.wbt</code><span> </span>檔即可。</p>
</li>
</ol>
</li>
</ul>
<h3>Webots 支援哪些主流程控制語言？各有何優缺點？</h3>
<table class="w-fit min-w-(--thread-content-width)" data-end="1703" data-start="1443">
<thead data-end="1462" data-start="1443">
<tr data-end="1462" data-start="1443">
<th data-col-size="sm" data-end="1451" data-start="1443">語言</th>
<th data-col-size="sm" data-end="1456" data-start="1451">優點</th>
<th data-col-size="sm" data-end="1462" data-start="1456">缺點</th>
</tr>
</thead>
<tbody data-end="1703" data-start="1489">
<tr data-end="1543" data-start="1489">
<td data-col-size="sm" data-end="1501" data-start="1489"><strong data-end="1500" data-start="1491">C/C++</strong></td>
<td data-col-size="sm" data-end="1528" data-start="1501">高效能，資源控制佳，適合嵌入式模擬與真實硬體整合</td>
<td data-col-size="sm" data-end="1543" data-start="1528">開發速度慢、語法較繁瑣</td>
</tr>
<tr data-end="1605" data-start="1544">
<td data-col-size="sm" data-end="1557" data-start="1544"><strong data-end="1556" data-start="1546">Python</strong></td>
<td data-col-size="sm" data-end="1589" data-start="1557">撰寫快速、易讀、資源豐富（支援 NumPy、PyTorch）</td>
<td data-col-size="sm" data-end="1605" data-start="1589">效能略低，不適合重度運算</td>
</tr>
<tr data-end="1645" data-start="1606">
<td data-col-size="sm" data-end="1617" data-start="1606"><strong data-end="1616" data-start="1608">Java</strong></td>
<td data-col-size="sm" data-end="1629" data-start="1617">跨平台佳，結構清晰</td>
<td data-col-size="sm" data-end="1645" data-start="1629">程式碼稍長、社群支援較少</td>
</tr>
<tr data-end="1703" data-start="1646">
<td data-col-size="sm" data-end="1659" data-start="1646"><strong data-end="1658" data-start="1648">MATLAB</strong></td>
<td data-col-size="sm" data-end="1675" data-start="1659">適合科學計算與控制理論模擬</td>
<td data-col-size="sm" data-end="1703" data-start="1675">授權成本高，與 Webots 整合需額外安裝套件</td>
</tr>
</tbody>
</table>
<h3>請說明如何使用 Webots 的 Console 與 Debug 工具協助程式錯誤排除。</h3>
<ul data-end="2146" data-start="1784">
<li data-end="1916" data-start="1784">
<p data-end="1807" data-start="1786"><strong data-end="1797" data-start="1786">Console</strong>（控制器輸出視窗）：</p>
<ul data-end="1916" data-start="1810">
<li data-end="1845" data-start="1810">
<p data-end="1845" data-start="1812">顯示控制器<span> </span><code data-end="1827" data-start="1818">print()</code><span> </span>或<span> </span><code data-end="1840" data-start="1830">printf()</code><span> </span>的輸出。</p>
</li>
<li data-end="1876" data-start="1848">
<p data-end="1876" data-start="1850">顯示錯誤訊息、例外（Exception）與除錯訊息。</p>
</li>
<li data-end="1913" data-start="1879">
<p data-end="1913" data-start="1881">可使用<span> </span><code data-end="1902" data-start="1885">robot.getName()</code><span> </span>等方法輸出除錯資訊。</p>
</li>
</ul>
</li>
<li data-end="2079" data-start="1917">
<p data-end="1948" data-start="1919"><strong data-end="1931" data-start="1919">Debug 工具</strong>（在 IDE 或外部開發工具中）：</p>
<ul data-end="2079" data-start="1951">
<li data-end="1996" data-start="1951">
<p data-end="1996" data-start="1953">可將控制器連結至外部 IDE（如 Visual Studio Code）來設斷點除錯。</p>
</li>
<li data-end="2021" data-start="1999">
<p data-end="2021" data-start="2001">C/C++ 控制器可透過 gdb 除錯。</p>
</li>
<li data-end="2079" data-start="2024">
<p data-end="2079" data-start="2026">Python 控制器可加入<span> </span><code data-end="2069" data-start="2040">import pdb; pdb.set_trace()</code><span> </span>進入互動除錯模式。</p>
</li>
</ul>
</li>
<li data-end="2146" data-start="2081">
<p data-end="2103" data-start="2083"><strong data-end="2102" data-start="2083">Supervisor 支援除錯</strong>：</p>
<ul data-end="2146" data-start="2106">
<li data-end="2125" data-start="2106">
<p data-end="2125" data-start="2108">可檢查世界中的物件狀態與位置變化。</p>
</li>
<li data-end="2146" data-start="2128">
<p data-end="2146" data-start="2130">可設定模擬暫停、單步執行等功能。</p>
</li>
</ul>
</li>
</ul>
<p><strong></strong></p>
<p><br/>HW2<span>相關提問:</span></p>
<p><span></span></p>
<h1>Midterm</h1>
<p>本課程所繳交的期中成績為學員自評之學習期望成績.</p>
<p>期中考週的自評期望成績繳交流程:</p>
<ol>
<li>整理先前所完成的各週的進度、作業網頁內容以及心得</li>
<li>拍攝期中自評影片, 上傳至 Youtube 後, 以"<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號</span>"為影片標題後嵌入本頁面中</li>
<li>回填期中自評表單</li>
<li>上傳學員期中成績</li>
</ol>
<p>各週進度:</p>
<p>各週網頁內容:</p>
<p>期中心得:</p>
<p>期中自評影片:</p>
<p></p>
<p style="padding-left: 30px;"></p>
<h1>期中表單</h1>
<p>41223116 吳長逸</p>
<p><span>請在以下欄位列出您的課程作業倉儲網址</span></p>
<p><a href="https://github.com/mdecd2025/hw-41223116">https://github.com/mdecd2025/hw-41223116</a></p>
<p><span>請在以下欄位列出您的課程作業 Github Pages 網址</span></p>
<p><a href="https://mdecd2025.github.io/hw-41223116/">https://mdecd2025.github.io/hw-41223116/</a></p>
<p><span>請在以下欄位填入您的課程作業倉儲提交 (commits) 總數</span></p>
<p>5</p>
<p><span>請根據課程內容的要求, 在以下欄位填入您自我評量後的課程學期期望成績</span></p>
<p>65</p>
<div class="-a-54" id="QuestionId_rc5f31cd8b21342acafafb2c50ccc7e79">
<div class="-P-55"><span class="-m-57" data-automation-id="questionTitle"><span aria-level="2" role="heading"><span class="text-format-content"><span>請在以下欄位詳細說明您上課至今所遭遇問題以及心得</span></span></span></span></div>
<div class="-P-55"><span class="-m-57" data-automation-id="questionTitle"><span aria-level="2" role="heading"><span class="text-format-content"><span></span></span></span></span></div>
<div class="-P-55"><span class="-m-57" data-automation-id="questionTitle"><span aria-level="2" role="heading"><span class="text-format-content"><span>雖然會畫圖，但是這堂課的網路倉儲和物理模擬我需要速度再慢點的教學，我跟不上目前的教學速度，可能其他人可以理解做這個或者這串語言，但是我希望教學是一個小段落停留讓我先跟上，現在的教學我離大家的進度越來越遠，跟上的動力越來越小了<br/>現在畫圖變快了，打字也熟練了，有最基本的能力，也大概知道在做甚麼，但是不會做或者不知道這段城市在做甚麼是我目前最大的問題。</span></span></span></span></div>
<div class="-P-55"><span class="-m-57" data-automation-id="questionTitle"><span aria-level="2" role="heading"><span class="text-format-content"><span></span></span></span></span></div>
<div class="-P-55"><span class="-m-57" data-automation-id="questionTitle"><span aria-level="2" role="heading"><span class="text-format-content"><span>5/9</span></span></span></span></div>
<div class="-P-55"><span class="-m-57" data-automation-id="questionTitle"><span aria-level="2" role="heading"><span class="text-format-content"><span>webots基本操作會了，現在對link的概念有點模糊，只知道他是組件一參考組件二位置。然後建立</span></span></span></span><span class="-m-57" data-automation-id="questionTitle"><span aria-level="2" role="heading"><span class="text-format-content"><span>solid只知道他是作為剛體使用，不知道它建立在這個位置作用是甚麼。</span></span></span></span></div>
</div>
<h1>Exam</h1>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 30px;">各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景 </p>
<p style="padding-left: 30px;">各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站.</p>
<p style="padding-left: 30px;">協同分組方式:</p>
<ol>
<li>分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁.</li>
</ol>
<h2>Exam前置</h2>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Ce65ej2HGcs?si=VyLr3X5f0z1fUvwM" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/_mGRPPzDGKA?si=pPwL073tFCeGHMB-" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/fourbar_slvs.7z">/downloads/fourbar_slvs.7z</a></p>
<h2>Exam1</h2>
<p>Exsm1 webots檔案<a href="/downloads/w4.1.7z">/downloads/w4.1.7z</a></p>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 41223116</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/MnwXI8ChAUM?si=cOlmPazLrOQEFRo_" title="YouTube video player" width="560"></iframe></p>
<h2>Exam2</h2>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景</p>
<p><span>檔案:</span><a href="/downloads/55.zip">/downloads/55.zip</a></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/TssXBkLXd_I?si=7JvuAmgTn8x-tIkz" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/9RHpuDeQ_0Y?si=sygh_puh0lG032bf" title="YouTube video player" width="560"></iframe></p>
<p><a href="/downloads/41223116_EXAM2.zip">/downloads/41223116_EXAM2.zip</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/7iI5vJ46jSY?si=IT_4qAmIo2pQPcMJ" title="YouTube video player" width="560"></iframe></p>
<h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號</p>
<h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p><span>說明: </span></p>
<p style="padding-left: 30px;"><span>籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上.</span></p>
<p style="padding-left: 30px;"><span>操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止.</span></p>
<p>請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中.</p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題<br/></span></p>
<h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>