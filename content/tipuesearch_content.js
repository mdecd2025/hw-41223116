var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱：協同產品設計實習 - Collaborative Product Design Practice \n', 'tags': '', 'url': 'About.html'}, {'title': 'w1', 'text': '學員作業網站:\xa0 https://mdecd2025.github.io/hw-41223116/ \n 學員作業倉儲:\xa0 https://github.com/mdecd2025/hw-41223116 \n 團隊(2)作業網站: https://mdecd2025.github.io/2a-ag2/ \n 團隊(2)作業倉儲: https://github.com/orgs/mdecd2025/teams/ag2/members \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n \n', 'tags': '', 'url': 'w1.html'}, {'title': 'w2', 'text': '\n', 'tags': '', 'url': 'w2.html'}, {'title': 'task5', 'text': '\n 請整理 \xa0 https://cyberbotics.com/doc/guide/introduction-to-webots \xa0 中重要的英文單字與用法, 並且針對其中所使用的英文文法逐句說明.\n', 'tags': '', 'url': 'task5.html'}, {'title': 'Important Vocabulary and Phrases (重要詞彙與短語)', 'text': '\n Simulation \xa0 - 模擬：一個模仿現實世界過程或系統的過程。 \n Prototyping \xa0 - 原型製作：創建產品或系統的早期版本（原型）的過程。 \n Mobile Robot \xa0 - 移動機器人：能夠在其環境中移動的機器人，通常配有感測器和驅動器。 \n Locomotion Schemes \xa0 - 移動方式：機器人移動的方式或系統（例如，輪式機器人、步態機器人、飛行機器人等）。 \n Sensors \xa0 - 感測器：用來檢測並對物理刺激作出反應的裝置，例如相機或距離感測器。 \n Actuators \xa0 - 驅動器：執行動作的裝置，如馬達或車輪。 \n Controller Program \xa0 - 控制程式：控制機器人行為或運作的程式。 \n Interface \xa0 - 介面：系統之間的連接或溝通（在此指模擬機器人與實體機器人之間的介面）。 \n Multi-Agent Research \xa0 - 多代理研究：涉及多個機器人共同工作的研究，通常是協作或集群設定。 \n Adaptive Behavior \xa0 - 自適應行為：基於環境或經驗變化的行為（通常涉及如神經網絡等人工智慧方法）。 \n BotStudio \xa0 - BotStudio：一種簡單的圖形化程式設計語言，用於在Webots中編程機器人。 \n VRML97 (Virtual Reality Modeling Language) \xa0 - VRML97（虛擬現實建模語言）：描述3D物體和環境的標準。 \n PROTOTYPE Files \xa0 - PROTOTYPE檔案：定義模擬中新增物件的檔案。 \n World File \xa0 - 世界檔案：定義模擬中環境、物體和機器人的檔案。 \n Controller Directory \xa0 - 控制器目錄：儲存機器人控制程式源碼和二進位檔案的目錄。 \n Supervisor Controller \xa0 - 監督控制器：一種特殊的控制器，具有更高的許可權來管理模擬功能。 \n Binary Executables \xa0 - 二進位執行檔：已編譯並可在系統中運行的程式檔案（例如".exe"檔案）。 \n Interpretation vs. Compilation \xa0 - 解釋與編譯：指編程語言的處理方式（例如，編譯語言如C/C++與解釋語言如Python的區別）。\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n \n', 'tags': '', 'url': 'Important Vocabulary and Phrases (重要詞彙與短語).html'}, {'title': '請列出上述文章中的重要的英文單字與解釋, 以及出現在文句中的用法', 'text': '\n Grammar Explanation (文法說明) \n Sentence 1: \n "Webots is a professional mobile robot simulation software package." \n \n \n "Webots" \xa0 (主語) \xa0 is \xa0 (連繫動詞) \xa0 a professional mobile robot simulation software package \xa0 (謂語名詞短語)。這是一個簡單的陳述句，描述Webots是什麼。 \n \n \n Sentence 2: \n "It offers a rapid prototyping environment, that allows the user to create 3D virtual worlds with physics properties such as mass, joints, friction coefficients, etc." \n \n \n "It offers" \xa0 (主語 + 動詞) 介紹了Webots的功能。 \n "that allows" \xa0 是一個關係子句，修飾 "environment"，解釋環境的功能。 \n "the user to create" （不定式短語）說明用戶可以進行的操作。 \n "with physics properties such as mass, joints, friction coefficients, etc." \xa0 提供有關虛擬世界的物理屬性的詳細信息。 \n \n \n Sentence 3: \n "The user can add simple passive objects or active objects called mobile robots." \n \n \n "The user can add" （主語 + 情態動詞 + 動詞原形）表示用戶可以進行的操作或許可。 \n "called mobile robots" \xa0 是一個現在分詞短語，修飾 "active objects"，提供額外信息。 \n \n \n Sentence 4: \n "These robots can have different locomotion schemes (wheeled robots, legged robots, or flying robots)." \n \n \n "can" \xa0 表示能力或可能性。 \n "different locomotion schemes" \xa0 表示機器人可以採用的不同移動方式。 \n \n \n Sentence 5: \n "Moreover, they may be equipped with a number of sensor and actuator devices, such as distance sensors, drive wheels, cameras, motors, touch sensors, emitters, receivers, etc." \n \n \n "may be equipped" \xa0 使用情態動詞 \xa0 may \xa0 表示可能性。 \n "such as" \xa0 用來介紹感測器和驅動器裝置的例子。 \n \n \n Sentence 6: \n "Finally, the user can program each robot individually to exhibit the desired behavior." \n \n \n "The user can program" \xa0 顯示了用戶的能力或許可。 \n "to exhibit" \xa0 是不定式動詞，說明編程的目的是為了表現所需的行為。 \n \n \n Sentence 7: \n "Webots also contains a number of interfaces to real mobile robots, so that once your simulated robot behaves as expected, you can transfer its control program to a real robot like e-puck, DARwIn-OP, Nao, etc." \n \n \n "so that" \xa0 引導目的子句，解釋為何要轉移控制程式。 \n "once your simulated robot behaves" \xa0 是時間條件子句，表示模擬機器人表現正常後，才會進行轉移。 \n \n \n Sentence 8: \n "What can I do with Webots?" \n \n \n 這是一個簡單的疑問句，使用情態動詞 \xa0 "can" \xa0 問Webots的功能。 \n \n \n Sentence 9: \n "Webots is well suited for research and educational projects related to mobile robotics." \n \n \n "is well suited for" \xa0 表示Webots適合於某些用途。 \n "related to mobile robotics" \xa0 描述了Webots所支持的研究領域。 \n \n \n Sentence 10: \n "Many mobile robotics projects have relied on Webots for years in the following areas:" \n \n \n "have relied" \xa0 使用現在完成時，表示一個持續或反覆發生的動作。 \n 這句話列出了Webots被使用的領域。 \n \n \n Sentence 11: \n "What do I need to know to use Webots?" \n \n \n 這是另一個疑問句，使用 \xa0 "do I need to know" \xa0 來詢問需要掌握的知識。 \n \n \n Sentence 12: \n "You will need a minimal amount of technical knowledge to develop your own simulations." \n \n \n "You will need" （將來時）表示必須具備的條件或需求。 \n "a minimal amount of technical knowledge" \xa0 指出所需的知識。 \n \n \n Sentence 13: \n "If you don\'t want to use existing robot models provided within Webots and would like to create your own robot models, or add special objects in the simulated environments, you will need a basic knowledge of 3D computer graphics and VRML97 description language." \n \n \n "If you don\'t want" （條件句）提出一種情境，表示若不使用現有的模型。 \n "would like to create" \xa0 表示替代的期望或行動。 \n "you will need" （將來時）強調執行某些操作所需的知識。 \n \n \n Sentence 14: \n "How do I get User Support?" \n \n \n 這是簡單的疑問句，詢問如何獲得使用者支持。 \n \n \n \n Overall Grammar Features (整體文法特點) \n \n \n Present Simple Tense (現在簡單時) : 用來描述事實或一般性資訊（例如："Webots is..."）。 \n Modal Verbs (情態動詞)（can, may, would） : 表示可能性、能力或請求（例如："You can program..."）。 \n Relative Clauses (關係子句) : 提供名詞的額外資訊（例如："robots called mobile robots"）。 \n Future Tense (將來時) : 描述將來會發生的動作（例如："You will need..."）。 \n Conditional Clauses (條件句) : 描述假設的情況及其結果（例如："If you don\'t want..."） \n \n', 'tags': '', 'url': '請列出上述文章中的重要的英文單字與解釋, 以及出現在文句中的用法.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n HW 1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題：國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號 \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n 各週網頁內容: \n 期中心得: \n 期中自評影片: \n \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': '期中表單', 'text': '41223116 吳長逸 \n 請在以下欄位列出您的課程作業倉儲網址 \n https://github.com/mdecd2025/hw-41223116 \n 請在以下欄位列出您的課程作業 Github Pages 網址 \n https://mdecd2025.github.io/hw-41223116/ \n 請在以下欄位填入您的課程作業倉儲提交 (commits) 總數 \n 5 \n 請根據課程內容的要求, 在以下欄位填入您自我評量後的課程學期期望成績 \n 65 \n \n 請在以下欄位詳細說明您上課至今所遭遇問題以及心得 \n \n 雖然會畫圖，但是這堂課的網路倉儲和物理模擬我需要速度再慢點的教學，我跟不上目前的教學速度，可能其他人可以理解做這個或者這串語言，但是我希望教學是一個小段落停留讓我先跟上，現在的教學我離大家的進度越來越遠，跟上的動力越來越小了 現在畫圖變快了，打字也熟練了，有最基本的能力，也大概知道在做甚麼，但是不會做或者不知道這段城市在做甚麼是我目前最大的問題。 \n \n 5/9 \n webots基本操作會了，現在對link的概念有點模糊，只知道他是組件一參考組件二位置。然後建立 solid只知道他是作為剛體使用，不知道它建立在這個位置作用是甚麼。 \n \n', 'tags': '', 'url': '期中表單.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam前置', 'text': '\n \n', 'tags': '', 'url': 'Exam前置.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 41223116 \n \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 檔案: /downloads/55.zip \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 \n \n \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};